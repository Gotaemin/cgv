<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.tm.cgv.member.MemberRepository">

	<sql id="search">
		LIKE concat('%',#{search},'%') AND enabled=1
	</sql>

	<resultMap type="MemberBasicVO" id="MemberMap">
		<id property="username" column="username"/>
		<result property="password" column="password"/>
		<result property="name" column="name"/>
		<result property="birth" column="birth"/>
		<result property="phone" column="phone"/>
		<result property="email" column="email"/>
		<result property="gender" column="gender"/>
		<result property="age" column="age"/>
		<result property="nick" column="nick"/>
		<result property="fileName" column="fileName"/>
		<result property="enabled" column="enabled"/>
		
		<collection property="authVOs" javaType="List" ofType="AuthVO">
			<result column="username" property="username"/>
			<result column="auth" property="auth"/>
		</collection>
	</resultMap>

	<insert id="join" parameterType="MemberBasicVO">
		INSERT INTO member VALUES(
			#{username}, #{password}, #{name}, #{birth}, #{phone}, #{email}, 
			#{gender}, #{age}, #{nick}, #{fileName}, 1
		)
	</insert>
	
	<select id="read" parameterType="MemberBasicVO" resultMap="MemberMap">
		SELECT * FROM 
		(SELECT * FROM member WHERE username = #{username}) M
		LEFT OUTER JOIN 
		(SELECT * FROM auth) A
		ON(M.username = A.username)
	</select>
	
	<select id="memberIdCheck" parameterType="MemberBasicVO" resultType="MemberBasicVO">
		SELECT * FROM member WHERE username = #{username} AND enabled=1
	</select>
	
	<select id="memberNickCheck" parameterType="MemberBasicVO" resultType="MemberBasicVO">
		SELECT * FROM member WHERE nick = #{nick} AND enabled=1
	</select>
	
	<select id="phoneCheck" parameterType="MemberBasicVO" resultType="MemberBasicVO">
		SELECT * FROM member WHERE phone = #{phone} AND enabled=1
	</select>
 
 	<select id="memberTotalCount" resultType="Long">
 		SELECT COUNT(username) FROM member
 	</select>
 
	<select id="memberCount" resultType="Long">
		SELECT COUNT(username) FROM member
		<where>
			<if test="kind == 'id'">
				username <include refid="search"/>
			</if>
			<if test="kind == 'name'">
				name <include refid="search"/>
			</if>
			<if test="kind == 'phone'">
				phone <include refid="search"/>
			</if>
		</where>
		ORDER BY username DESC LIMIT #{startRow}, #{perPage}
	</select>
	
	<select id="memberList" parameterType="Pager" resultType="MemberBasicVO">
		SELECT * FROM member 
		<where>
			<if test="kind == 'id'">
				username <include refid="search"/>
			</if>
			<if test="kind == 'name'">
				name <include refid="search"/>
			</if>
			<if test="kind == 'phone'">
				phone <include refid="search"/>
			</if>
		</where>
		ORDER BY username DESC LIMIT #{startRow}, #{perPage}
	</select>
	
	<update id="memberDelete" parameterType="MemberBasicVO">
		UPDATE member SET enabled = 0 WHERE username = #{username}
	</update>
 
 	<update id="memberEdit" parameterType="MemberBasicVO">
 		UPDATE member SET username=#{username}, password=#{password}, name=#{name},
 			birth=#{birth}, phone=#{phone}, email=#{email}, gender=#{gender}, age=#{age},
 		    nick=#{nick, jdbcType=VARCHAR}, fileName=#{fileName, jdbcType=VARCHAR}, enabled=#{enabled}
 		WHERE username = #{username}
 	</update>
</mapper>